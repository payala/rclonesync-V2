
:MSG: test_check_access_filters


:MSG:  EXCLUDE OTHER TESTS

rclone copy ./tests/test_check_access_filters/ExcludeOther_filtersfile.txt ./testwd/

:MSG:  --first-sync to get the ExcludeOther_filtersfile.txt.MD5 built.

../rclonesync ./testdir/path1/ ./testdir/path2/ --first-sync --filters-file ./testwd/ExcludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/ExcludeOther_filtersfile.txt, first_sync=True, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/ExcludeOther_filtersfile.txt>
Storing filters-file hash to <./testwd/ExcludeOther_filtersfile.txt-MD5>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> --first-sync synching Path1 to Path2
>>>>> --first-sync refreshing lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:MSG:  EXCLUDE - Test filters for Check Access

../rclonesync ./testdir/path1/ ./testdir/path2/ --check-access --filters-file ./testwd/ExcludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/ExcludeOther_filtersfile.txt, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/ExcludeOther_filtersfile.txt>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> Checking Path1 and Path2 rclone filesystems access health
  Found <3> matching <RCLONE_TEST> files on both paths
>>>>> No changes on Path1 or Path2
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Checking integrity of LSL history files for Path1  <./testdir/path1/>  versus Path2  <./testdir/path2/>
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Exclude_Initial


:MSG:  EXCLUDE - Delete RCLONE_TEST files in excluded directories

rclone delete ./testdir/path2/subdir/subdirA/RCLONE_TEST
rclone delete ./testdir/path1/subdir-not/RCLONE_TEST
rclone delete ./testdir/path2/subdir-not/subdir-not2/RCLONE_TEST
rclone delete ./testdir/path1/subdirX/RCLONE_TEST

:MSG:  EXCLUDE - Test Should PASS

../rclonesync ./testdir/path1/ ./testdir/path2/ --check-access --filters-file ./testwd/ExcludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/ExcludeOther_filtersfile.txt, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/ExcludeOther_filtersfile.txt>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> Checking Path1 and Path2 rclone filesystems access health
  Found <3> matching <RCLONE_TEST> files on both paths
>>>>> No changes on Path1 or Path2
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Checking integrity of LSL history files for Path1  <./testdir/path1/>  versus Path2  <./testdir/path2/>
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Exclude_PassRun


:MSG:  EXCLUDE - Delete RCLONE_TEST files in included directories

rclone delete ./testdir/path2/RCLONE_TEST
rclone delete ./testdir/path1/subdir/RCLONE_TEST

:MSG:  EXCLUDE - Test Should CRITICAL ERROR

../rclonesync ./testdir/path1/ ./testdir/path2/ --check-access --filters-file ./testwd/ExcludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/ExcludeOther_filtersfile.txt, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/ExcludeOther_filtersfile.txt>
>>>>> Path1 Checking for Diffs
  Path1      File was deleted                  - subdir/RCLONE_TEST
     1 file change(s) on Path1:    0 new,    0 newer,    0 older,    1 deleted
>>>>> Path2 Checking for Diffs
  Path2      File was deleted                  - RCLONE_TEST
     1 file change(s) on Path2:    0 new,    0 newer,    0 older,    1 deleted
>>>>> Checking Path1 and Path2 rclone filesystems access health
  ERROR    Failed access health test:  Path1 key <RCLONE_TEST> not found in Path2 - 
  ERROR    Failed access health test:  Path2 key <subdir/RCLONE_TEST> not found in Path1 - 
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
***** Critical Error Abort - Must run --first-sync to recover.  See README.md *****


:SAVELSL: Exclude_ErrorRun

rm ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_ERROR ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_NEW ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_ERROR ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_NEW

:MSG:  INCLUDE OTHER TESTS


:MSG:  Reset to the initial state

rclone copy ./tests/test_check_access_filters/initial ./testdir/path1/
rclone sync ./testdir/path1/ ./testdir/path2/
rclone copy ./tests/test_check_access_filters/IncludeOther_filtersfile.txt ./testwd/
../rclonesync ./testdir/path1/ ./testdir/path2/ --first-sync --filters-file ./testwd/IncludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/IncludeOther_filtersfile.txt, first_sync=True, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/IncludeOther_filtersfile.txt>
Storing filters-file hash to <./testwd/IncludeOther_filtersfile.txt-MD5>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> --first-sync synching Path1 to Path2
>>>>> --first-sync refreshing lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:MSG:  INCLUDE - Test Include/Exclude filters for Check Access

../rclonesync ./testdir/path1/ ./testdir/path2/ --check-access --filters-file ./testwd/IncludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/IncludeOther_filtersfile.txt, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/IncludeOther_filtersfile.txt>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> Checking Path1 and Path2 rclone filesystems access health
  Found <5> matching <RCLONE_TEST> files on both paths
>>>>> No changes on Path1 or Path2
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Checking integrity of LSL history files for Path1  <./testdir/path1/>  versus Path2  <./testdir/path2/>
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Include_Initial


:MSG:  INCLUDE - Delete RCLONE_TEST files in excluded directories

rclone delete ./testdir/path2/subdir/subdirA/RCLONE_TEST
rclone delete ./testdir/path1/subdir-not/RCLONE_TEST
rclone delete ./testdir/path2/subdir-not/subdir-not2/RCLONE_TEST

:MSG:  INCLUDE - Test Should PASS

../rclonesync ./testdir/path1/ ./testdir/path2/ --check-access --filters-file ./testwd/IncludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/IncludeOther_filtersfile.txt, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/IncludeOther_filtersfile.txt>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> Checking Path1 and Path2 rclone filesystems access health
  Found <5> matching <RCLONE_TEST> files on both paths
>>>>> No changes on Path1 or Path2
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Checking integrity of LSL history files for Path1  <./testdir/path1/>  versus Path2  <./testdir/path2/>
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Include_PassRun


:MSG:  INCLUDE - Delete RCLONE_TEST files in included directories

rclone delete ./testdir/path2/RCLONE_TEST
rclone delete ./testdir/path1/subdir/RCLONE_TEST
rclone delete ./testdir/path1/subdirX/subdirX1/RCLONE_TEST

:MSG:  INCLUDE - Test Should CRITICAL ERROR

../rclonesync ./testdir/path1/ ./testdir/path2/ --check-access --filters-file ./testwd/IncludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/IncludeOther_filtersfile.txt, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/IncludeOther_filtersfile.txt>
>>>>> Path1 Checking for Diffs
  Path1      File was deleted                  - subdir/RCLONE_TEST
  Path1      File was deleted                  - subdirX/subdirX1/RCLONE_TEST
     2 file change(s) on Path1:    0 new,    0 newer,    0 older,    2 deleted
>>>>> Path2 Checking for Diffs
  Path2      File was deleted                  - RCLONE_TEST
     1 file change(s) on Path2:    0 new,    0 newer,    0 older,    1 deleted
>>>>> Checking Path1 and Path2 rclone filesystems access health
  ERROR    Failed access health test:  <RCLONE_TEST> Path1 count 3, Path2 count 4 - 
  ERROR    Failed access health test:  Path1 key <RCLONE_TEST> not found in Path2 - 
  ERROR    Failed access health test:  Path2 key <subdir/RCLONE_TEST> not found in Path1 - 
  ERROR    Failed access health test:  Path2 key <subdirX/subdirX1/RCLONE_TEST> not found in Path1 - 
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
***** Critical Error Abort - Must run --first-sync to recover.  See README.md *****


:SAVELSL: Include_ErrorRun

rm ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_ERROR ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_NEW ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_ERROR ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_NEW
