
:MSG: test_extended_filenames


:MSG:	Initial rclonesync --first-sync

../rclonesync ./testdir/path1/ ./testdir/path2/ --first-sync --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> --first-sync synching Path1 to Path2
>>>>> --first-sync refreshing lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:MSG:	Place a newer files on the Path1 and Path2

touch ./tests/test_extended_filenames/modfiles/file1.txt --date=2001-01-02
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path2/New_top_level_mañana_funcionará.txt
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path2/file_enconde_mañana_funcionará.txt
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path1/subdir_with_ࢺ_/mañana_funcionará.txt
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path2/subdir_with_ࢺ_/filename_contains_ࢺ_p2s.txt
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path1/filename_contains_ࢺ_p1m.txt
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path1/subdir_with_ࢺ_/file_with_測試_.txt
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path1/subdir_with_ࢺ_/test.txt
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path2/Русский.txt

:MSG:	Place a new file on both Path1 and Path2

rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path2/subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt
touch ./tests/test_extended_filenames/modfiles/file1.txt --date=2001-01-03
rclone copyto ./tests/test_extended_filenames/modfiles/file1.txt ./testdir/path1/subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt

:MSG:	Delete files on both Path1 and Path2

rclone delete ./testdir/path2/filename_contains_ࢺ_.txt
rclone delete ./testdir/path2/subdir_with_ࢺ_/filename_contains_ě_.txt
rclone delete ./testdir/path1/Русский.txt

:MSG:	rclonesync test run

../rclonesync ./testdir/path1/ ./testdir/path2/ --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
>>>>> Path1 Checking for Diffs
  Path1      File was deleted                  - Русский.txt
  Path1      File is new                       - filename_contains_ࢺ_p1m.txt
  Path1      File is new                       - subdir_with_ࢺ_/file_with_測試_.txt
  Path1      File is new                       - subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt
  Path1      File is new                       - subdir_with_ࢺ_/mañana_funcionará.txt
  Path1      File is new                       - subdir_with_ࢺ_/test.txt
     6 file change(s) on Path1:    5 new,    0 newer,    0 older,    1 deleted
>>>>> Path2 Checking for Diffs
  Path2      File is newer                     - file_enconde_mañana_funcionará.txt
  Path2      File was deleted                  - filename_contains_ࢺ_.txt
  Path2      File was deleted                  - subdir_with_ࢺ_/filename_contains_ě_.txt
  Path2      File is newer                     - Русский.txt
  Path2      File is new                       - New_top_level_mañana_funcionará.txt
  Path2      File is new                       - subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt
  Path2      File is new                       - subdir_with_ࢺ_/filename_contains_ࢺ_p2s.txt
     7 file change(s) on Path2:    3 new,    2 newer,    0 older,    2 deleted
>>>>> Determining and applying changes
  Path1      Queue copy to Path2               - ./testdir/path2/filename_contains_ࢺ_p1m.txt
  Path1      Queue copy to Path2               - ./testdir/path2/subdir_with_ࢺ_/file_with_測試_.txt
  WARNING    New or changed in both paths      - subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt
  Path1      Renaming Path1 copy               - ./testdir/path1/subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt_Path1
  Path1      Queue copy to Path2               - ./testdir/path2/subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt_Path1
  Path2      Renaming Path2 copy               - ./testdir/path2/subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt_Path2
  Path2      Queue copy to Path1               - ./testdir/path1/subdir_with_ࢺ_/filechangedbothpaths_ࢺ_.txt_Path2
  Path1      Queue copy to Path2               - ./testdir/path2/subdir_with_ࢺ_/mañana_funcionará.txt
  Path1      Queue copy to Path2               - ./testdir/path2/subdir_with_ࢺ_/test.txt
  Path2      Queue copy to Path1               - ./testdir/path1/Русский.txt
  Path2      Queue copy to Path1               - ./testdir/path1/New_top_level_mañana_funcionará.txt
  Path2      Queue copy to Path1               - ./testdir/path1/file_enconde_mañana_funcionará.txt
  Path1      Queue delete                      - ./testdir/path1/filename_contains_ࢺ_.txt
  Path1      Queue delete                      - ./testdir/path1/subdir_with_ࢺ_/filename_contains_ě_.txt
  Path2      Queue copy to Path1               - ./testdir/path1/subdir_with_ࢺ_/filename_contains_ࢺ_p2s.txt
  Path2      Do queued copies to               - Path1
  Path1      Do queued copies to               - Path2
             Do queued deletes on              - Path1
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Checking integrity of LSL history files for Path1  <./testdir/path1/>  versus Path2  <./testdir/path2/>
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.

