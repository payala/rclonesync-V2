
:MSG: test_extended_char_paths


:MSG:	--first-sync of subdirs with extended chars

../rclonesync ./testdir/path1/測試_Русский_ě_áñ ./testdir/path2/測試_Русский_ě_áñ --first-sync --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ_>
Synching Path1  <./testdir/path1/測試_Русский_ě_áñ/>  with Path2  <./testdir/path2/測試_Русский_ě_áñ/>
Command args: <Path1=./testdir/path1/測試_Русский_ě_áñ, Path2=./testdir/path2/測試_Русский_ě_áñ, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> --first-sync synching Path1 to Path2
>>>>> --first-sync refreshing lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ_>
>>>>> Successful run.  All done.


:SAVELSL: first_sync


:MSG:   Place new files with extended chars on each side

touch ./tests/test_extended_char_paths/modfiles/file1.txt --date=2001-01-02
rclone copyto ./tests/test_extended_char_paths/modfiles/file1.txt ./testdir/path1/測試_Русский_ě_áñ/測試_file1p1
rclone copyto ./tests/test_extended_char_paths/modfiles/file1.txt ./testdir/path2/測試_Русский_ě_áñ/測試_file1p2

:MSG:   Normal sync of subdirs with extended chars

../rclonesync ./testdir/path1/測試_Русский_ě_áñ ./testdir/path2/測試_Русский_ě_áñ --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ_>
Synching Path1  <./testdir/path1/測試_Русский_ě_áñ/>  with Path2  <./testdir/path2/測試_Русский_ě_áñ/>
Command args: <Path1=./testdir/path1/測試_Русский_ě_áñ, Path2=./testdir/path2/測試_Русский_ě_áñ, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
>>>>> Path1 Checking for Diffs
  Path1      File is new                       - 測試_file1p1
     1 file change(s) on Path1:    1 new,    0 newer,    0 older,    0 deleted
>>>>> Path2 Checking for Diffs
  Path2      File is new                       - 測試_file1p2
     1 file change(s) on Path2:    1 new,    0 newer,    0 older,    0 deleted
>>>>> Determining and applying changes
  Path1      Queue copy to Path2               - ./testdir/path2/測試_Русский_ě_áñ/測試_file1p1
  Path2      Queue copy to Path1               - ./testdir/path1/測試_Русский_ě_áñ/測試_file1p2
  Path2      Do queued copies to               - Path1
  Path1      Do queued copies to               - Path2
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Checking integrity of LSL history files for Path1  <./testdir/path1/測試_Русский_ě_áñ/>  versus Path2  <./testdir/path2/測試_Русский_ě_áñ/>
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ_>
>>>>> Successful run.  All done.


:SAVELSL: normal_sync

rm ./testwd/LSL_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ__files_copy_P1P2 ./testwd/LSL_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ__files_copy_P2P1 ./testwd/LSL_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ__Path1 ./testwd/LSL_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ__Path1_NEW ./testwd/LSL_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ__Path2 ./testwd/LSL_._testdir_path1_測試_Русский_ě_áñ_._testdir_path2_測試_Русский_ě_áñ__Path2_NEW

:MSG:	Test --check-filename with extended chars - check fail

../rclonesync ./testdir/path1/ ./testdir/path2/ --first-sync --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> --first-sync synching Path1 to Path2
>>>>> --first-sync refreshing lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.

rclone delete ./testdir/path1/測試_Русский_ě_áñ/測試_checkfile
../rclonesync ./testdir/path1/ ./testdir/path2/ --check-access --check-filename 測試_checkfile --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=測試_checkfile, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
>>>>> Path1 Checking for Diffs
  Path1      File was deleted                  - 測試_Русский_ě_áñ/測試_checkfile
     1 file change(s) on Path1:    0 new,    0 newer,    0 older,    1 deleted
>>>>> Path2 Checking for Diffs
>>>>> Checking Path1 and Path2 rclone filesystems access health
  ERROR    Failed access health test:  <測試_checkfile> Path1 count 1, Path2 count 2 - 
  ERROR    Failed access health test:  Path2 key <測試_Русский_ě_áñ/測試_checkfile> not found in Path1 - 
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
***** Critical Error Abort - Must run --first-sync to recover.  See README.md *****


:SAVELSL: Check_access_fail


:MSG:	Test --check-filename with extended chars - check pass

../rclonesync ./testdir/path1/ ./testdir/path2/ --first-sync --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
>>>>> --first-sync copying any unique Path2 files to Path1
  Path2      --first-sync queue copy to Path1  - 測試_Русский_ě_áñ/測試_checkfile
  Path2      Do queued first-sync copies to    - Path1
>>>>> --first-sync synching Path1 to Path2
>>>>> --first-sync refreshing lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.

../rclonesync ./testdir/path1/ ./testdir/path2/ --check-access --check-filename 測試_checkfile --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=測試_checkfile, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> Checking Path1 and Path2 rclone filesystems access health
  Found <2> matching <測試_checkfile> files on both paths
>>>>> No changes on Path1 or Path2
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Checking integrity of LSL history files for Path1  <./testdir/path1/>  versus Path2  <./testdir/path2/>
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Check_access_pass

rm ./testwd/LSL_._testdir_path1_._testdir_path2__files_first_sync_copy_P2P1 ./testwd/LSL_._testdir_path1_._testdir_path2__Path1 ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_ERROR ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_NEW ./testwd/LSL_._testdir_path1_._testdir_path2__Path2 ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_ERROR ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_NEW

:MSG:   Test --filters-file path with extended chars - masks /fileZ.txt

rclone copy ./tests/test_extended_char_paths/modfiles/測試_filtersfile.txt ./testwd/
../rclonesync ./testdir/path1/ ./testdir/path2/ --filters-file ./testwd/測試_filtersfile.txt --first-sync --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/測試_filtersfile.txt, first_sync=True, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/測試_filtersfile.txt>
Storing filters-file hash to <./testwd/測試_filtersfile.txt-MD5>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> --first-sync synching Path1 to Path2
>>>>> --first-sync refreshing lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.

rclone copyto ./tests/test_extended_char_paths/modfiles/file1.txt ./testdir/path1/fileZ.txt
../rclonesync ./testdir/path1/ ./testdir/path2/ --filters-file ./testwd/測試_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --no-cleanup --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V3.2 201201) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, check_sync_only=False, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/測試_filtersfile.txt, first_sync=False, force=False, max_deletes=50, no_check_sync=False, no_cleanup=True, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/測試_filtersfile.txt>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path1 or Path2
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Checking integrity of LSL history files for Path1  <./testdir/path1/>  versus Path2  <./testdir/path2/>
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.

